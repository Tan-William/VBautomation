<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Data buffering behind the form</title>
</head>

<body>

<p><font size="5"><b>Data buffering behind the form</b></font></p>
<p><font size="2" face="Verdana">As you edit data on a form, the data is actually 
stored in several areas in memory (areas we called <br>
them 'buffers').
Let's trace the life cycle of an edit. </font></p>
<p><font face="Verdana" size="2">When you first navigate to a record on a form, 
the data for that record is pulled from the underlying <br>
table to the
form. This data is stored in a buffer containing a single record. Each control 
on the form <br>
then displays data from
that buffer. As soon as you start typing into a control, the data for that 
<br>
single control is pulled into a second buffer.</font></p>
<p><font face="Verdana" size="2">If you tab to another control, the data from the 
control buffer is written back to the form buffer, <br>
triggering the
control's <font color="#0000FF">
BeforeUpdate</font> and
<font color="#0000FF">AfterUPdate</font> events. Alternaively, you can press Esc, 
<br>
discarding your 
changes and wiping
out the control buffer. In this case, the control's update events <br>
are not 
triggered.</font></p>
<p><font face="Verdana" size="2">As you edit controls, the entire record is still 
held in the form-level buffer. None of the changes is <br>
written back to the database at this point. If you press Esc twice, the form-level buffer is 
simply <br>
discarded. On the other hand,
if you save the record, the <font color="#0000FF">BeforeUpdate</font> and
<font color="#0000FF">AfterUPdate</font> events for <br>
the form are triggered, and 
the changes are
written back to the underlying table.</font></p>

</body>

</html>
