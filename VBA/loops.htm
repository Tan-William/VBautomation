<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Excel Macros/Excel VBA code. Excel VBA Macro Tips for Beginners. Excel 
Macros Help</title>
<meta name="author" content="William Tan, http://tan-william.github.io/VBautomation/">
<meta name="Description" content="Excel Macros: Excel VBA Macros. Free help on Excel Macros, Free Excel VBA code">
<meta name="Keywords" content="excel macros,Excel VBA,excel,vba,tips,tricks,excel vba,Visual Basic For Applications,help">
<meta name="keywords" content="Poh,William,Excel,Access,VBA,Forecasting,Inventory">
<meta name="keywords" content="Excel macro tips,Excel macro training,Excel tips,Home,Office,Basic,Intermediate,Advance">
<meta name="keywords" content="Singapore, Kuala Lumpur, KL, Malaysia, Hong Kong, Taiwan, Japan, China, Korea, Sarawak">
<meta name="generator" content="Microsoft FrontPage 12.0">
</head>

<script language="javascript">
// Courtesy of SimplytheBest.net - http://simplythebest.net/scripts/
var win = null;
function NewWindow(mypage,myname,w,h,scroll){
LeftPosition = (screen.width) ? (screen.width-w)/2 : 0;
TopPosition = (screen.height) ? (screen.height-h)/2 : 0;
settings =
'height='+h+',width='+w+',top='+TopPosition+',left='+LeftPosition+',scrollbars='+scroll+',resizable'
win = window.open(mypage,myname,settings)
}
</script>


<script type="text/javascript">
<!--if (top.location != location) {top.location.href = document.location.href ;}-->
</script>


<style>
<!--
A.type1:link    {color:#0033CC; text-decoration:underline;}
A.type1:visited {color:#0033CC; text-decoration:underline;}
A.type1:active  {color:#0033CC; text-decoration:underline;}
A.type1:hover   {color:#660033; text-decoration:none;}

A.type2:link    {color:#F06000; text-decoration:none;}
A.type2:visited {color:#F06000; text-decoration:none;}
A.type2:active  {color:#F06000; text-decoration:none;}
A.type2:hover   {color:#0066FF; text-decoration:underline;}

A.type3:link    {color:#0033CC; text-decoration:none;}
A.type3:visited {color:#0033CC; text-decoration:none;}
A.type3:active  {color:#0033CC; text-decoration:none;}
A.type3:hover   {color:#800000; text-decoration:overline underline;}
//-->
</style>

<style>
<!--
.new_link {color: #000000;  font-family: Verdana, Arial, Helvetica, sans-serif;   font-size: 11px; text-decoration: none; font-weight: normal;}
-->
</style>

<body background="../logo.gif" style="background-attachment: fixed">

<style type="text/css">
body {scrollbar-3dlight-color:#000000;
scrollbar-arrow-color:#FFFFFF;
scrollbar-base-color:#ffffff;
scrollbar-darkshadow-color:#000000;
scrollbar-face-color:#339933;
scrollbar-highlight-color:#ffffff;
scrollbar-shadow-color:#ffffff}
 li.MsoNormal
	{mso-style-parent:"";
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	margin-left:0in; margin-right:0in; margin-top:0in}
h1
	{margin-right:0in;
	margin-left:0in;
	font-size:24.0pt;
	font-family:"Times New Roman"}
span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
.auto-style1 {
	font-family: Verdana;
}
.auto-style3 {
	color: #000000;
	font-family: Verdana;
	font-size: 10.5pt;
	text-decoration: none;
	font-weight: normal;
}
.auto-style4 {
	font-family: Verdana;
	font-size: 10.5pt;
}
.auto-style5 {
	font-family: Verdana;
	font-size: 10.5pt;
	text-decoration: none;
	font-weight: normal;
}
.auto-style6 {
	color: #0045C3;
}
.auto-style7 {
	color: #0045C3;
	font-family: Verdana;
	font-size: 10.5pt;
	text-decoration: none;
	font-weight: normal;
}
.auto-style8 {
	font-size: 10.5pt;
}
.auto-style10 {
	font-size: 10.5pt;
	color: blue;
	font-family: Verdana;
}
.auto-style11 {
	font-family: Verdana;
	font-style: italic;
	font-size: 10.5pt;
}
.auto-style12 {
	font-size: 10.5pt;
	color: #800000;
	font-family: Verdana;
}
.auto-style13 {
	font-size: 10.5pt;
	font-weight: bold;
}
.auto-style14 {
	font-family: Verdana;
	color: #800000;
	font-size: 10.5pt;
	margin-left: 0in;
	margin-right: 0in;
	margin-top: 0in;
	margin-bottom: .0001pt;
}
.auto-style15 {
	font-family: Verdana;
	font-weight: bold;
}
.auto-style16 {
	font-size: 10.5pt;
	font-family: Verdana;
	margin-left: 0in;
	margin-right: 0in;
	margin-top: 0in;
	margin-bottom: .0001pt;
}
.auto-style17 {
	font-family: Verdana;
	color: #800000;
	font-weight: 700;
	font-size: 10.5pt;
	margin-left: 0in;
	margin-right: 0in;
	margin-top: 0in;
	margin-bottom: .0001pt;
}
.auto-style18 {
	font-size: 14pt;
	font-family: Verdana;
}
.auto-style19 {
	font-size: 15pt;
}
.auto-style20 {
	font-family: Verdana;
	font-weight: bold;
	font-size: 15pt;
}
.auto-style21 {
	font-family: Verdana;
	color: #800000;
	margin-left: 0in;
	margin-right: 0in;
	margin-top: 0in;
	margin-bottom: .0001pt;
}
.auto-style22 {
	font-family: "Courier New";
	color: #800000;
	font-size: 10.5pt;
	margin-left: 0in;
	margin-right: 0in;
	margin-top: 0in;
	margin-bottom: .0001pt;
}
.auto-style23 {
	font-family: Verdana;
	font-size: 15pt;
}
</style>

<font face="">
<TABLE border="0" cellspacing="3" width="98%">
<TBODY>
<tr>
<td bgcolor="#ffffff" valign="top" align="center" style="width: 9%">
</font>


<font face="">	
 <TABLE bgcolor="#3399cc" border="0" cellpadding="0" cellspacing="0" width="158">
  <TBODY>
	<TR>
	 <TD>
       <TABLE border="0" cellpadding="3" cellspacing="1" width="161">
         <TBODY>


					<tr width="159">
					<td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<a href="../index.htm" rel="internal" class="auto-style3">Home</a></td>
					</tr>
					
					<tr width="159">
					<td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<a href="../AboutMe/Me.htm" rel="internal" class="auto-style3">
					About me</a></td>
					</tr>
                     
		<TBODY>
		<td bgcolor="#3399cc" height="135" width="153">
		<p align="left">
		<img border="0" src="../logo-excelvba_1.gif" width="153" height="59"><br>
		<img border="0" src="../logo-excelvba_2.gif" width="153" height="68"></td>
		</TBODY>                  
                                                
                                                
				<tr height="" width="159">
				<td bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
				<font class="auto-style3"><strong><br>
				&nbsp;<i>VBA Programming</i></strong></font></font></font><span class="auto-style4">
				</span>

<font face="">

                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" align="left" class="auto-style4">
					<a href="Sub_VBA/WilliamExcelUtilities.zip" rel="internal" class="auto-style5">
					<strong><span class="auto-style6">Download</span></strong></a><a href="Sub_VBA/WilliamExcelUtilities.zip" rel="internal" class="auto-style3"> my Add-In 
					tool (run on 32-bit MS Office Excel)</a></td>
                    </tr>
                                                
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" align="left" height="28" class="auto-style4">
					<a href="beginner_basic.htm" rel="internal" class="auto-style3">
					VBA Basic for beginners</a></td>
                    </tr>
                    
                    <tr width="159">
                    <td onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<a href="Objects.htm" rel="internal" class="auto-style3">Excel 
					Main Objects</a></td>
                    </tr>
                    
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<a href="rows_columns.htm" rel="internal" class="auto-style3">
					More with Rows, Columns, Cells, Range ...</a></td>
                    </tr>
                    
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="33" class="auto-style4">
					<a href="workaround_worksheet.htm" rel="internal" class="auto-style3">
					Working around your Worksheet ...</a></td>
                    </tr>
                                        
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<a href="statements.htm" rel="internal" class="auto-style3">
					Statements</a></td>
                    </tr>
                                   
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
 					<a href="functions.htm" rel="internal" class="auto-style3">
					Functions</a><span class="auto-style4"></font></span></td>
                    </tr>
                                   
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<font face="">	
 					<a href="loops.htm" rel="internal" class="auto-style7">
					Conditional Statements and Loops Structure</a></font></td>
                    </tr>
                                                                   
					<tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<a href="errors_handling.htm" rel="internal" class="auto-style3">
					Errors Handling</a><span class="auto-style4"></font></span></td>
                    </tr>
                                        
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<a href="userforms.htm" rel="internal" class="auto-style3">
					UserForms</a><span class="auto-style4"></font></span></td>
                    </tr>
                    
                    <tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<a href="pivot_table.htm" rel="internal" class="auto-style3">
					Pivot Tables</a><span class="auto-style4"></font></span></td>
                    </tr>
					
					<tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<font face="">	
 					<a href="charting.htm" rel="internal" class="auto-style3">
					Charting</a></font></td>
                    </tr>		
					
					<tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<font face="">	
 					<a href="autofilter.htm" rel="internal" class="auto-style3">
					AutoFilter, Advanced Filter</a></font></td>
                    </tr>                            

					<tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<font face="">	
 					<a href="File_IO_VisualBasic.htm" rel="internal" class="auto-style3">
					File I/O VBA Examples</a></font></td>
                    </tr>     
					
					<tr width="159">
                    <td style="cursor: pointer" onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" class="auto-style4">
					<font face="">	
 					<a href="ado_dao.htm" rel="internal" class="auto-style3">ADO 
					and DAO, integrating Excel and Access</a></font></td>
                    </tr>
                    
					<tr width="159">
                    <td onmouseover="this.style.backgroundColor='#339933'; this.style.cursor='hand'; this.style.cursor='pointer';" onmouseout="this.style.backgroundColor='#FFFF66';" bgcolor="#FFFF66" valign="middle" width="153" height="28" class="auto-style4">
					<a href="excel_fun_staff.htm" rel="internal" class="auto-style3">
					Other VBA fun staff</a></td>
                    </tr>


                    <tr HEIGHT="130" width="159">
                    <td bgcolor="#FFFF66" width="153" height="15260">
					<p></p>
					</tr>

					</TBODY></TABLE>
				</TD>
			</TR>
		</TBODY></TABLE>

<font face="">

<font face="">

<font face="">

<font face="">
						
			
<td bgcolor="#FFFFFF" style="width: 1%"></td>
<td valign="top" width="79%">
      <!-- Start Page Content -->
<font face="arial">

		</font></font>
		<p><font face="arial" style="font-size: 20pt"><b>Conditional statements 
		and Loop structures</b></font></p></font>

<font face="Arial" size="2">
		<p><a class="type1" href="#if-then-else"><span class="auto-style4">If&#8230;Then&#8230;ElseIf&#8230;Else examples</span></a><span class="auto-style1"><font class="auto-style8" size="2"><br>
		<a class="type1" href="#select_case">Select Case examples</a><br>
		<a class="type1" href="#for_next">For&#8230; Next loop examples</a><br>
		<a class="type1" href="#do_loop">Do...Loop examples</a><br>
		<a class="type1" href="#do_loop_while">Do While ...Loop examples</a><br>
		<a class="type1" href="#do_loop_while">Do ...Loop While examples</a><br>
		<a class="type1" href="#do_until_loop">Do Until&#8230;Loop examples</a><br>
		<a class="type1" href="#do_until_loop">Do &#8230;Loop Until examples</a><br>
		</font>
		<a class="type1" href="#While...Wend"><span class="auto-style8">While...Wend examples</span></a></span></p>
		</font>

<font face="">
		<p><font face="arial">
		<span class="auto-style4">Many times in your 
		work on spreadsheet, you may want to repeat an action (populate a 
		formula, copy value over to somewhere, formatting, etc) a predetermined 
		number of times, or to repeat an action or a series of action base upon 
		a variable value that changes every time, or repeat until a certain 
		condition is met. Under such circumstances, you would use <i>loops 
		structures </i>&nbsp;or <i>conditional statement</i> in VBA. Of course, there 
		is nothing wrong if a readily recorded macro can do all the jobs for 
		you, but a variable code should give you much more flexibility and 
		advantages over hard-coding the number of repetitions. For example, when 
		the sheet that you received sometimes had certain columns changed or the 
		header names had changed, you would find that your recorded macro no 
		longer work. Worst the macro may still worked and gave you the output 
		that seemed normal but you did not notice that it had computed the wrong 
		columns and what you thought normal was in deed a very misleading 
		result.</span></font></p>
		<p><span style="font-family: Arial"><b><br>
		</b></span></font><span class="auto-style18"><strong>Using Conditional 
		Statements to make decisions</strong></span><font face=""><span style="font-family: Arial"><b><br>
		</b></span><font face>
		<span class="auto-style4">Conditional 
		statements evaluate whether a condition is True or False, and then 
		specify one or more statements to run, depending on the result.</span></p>
		<p><b><span style="color: blue" class="auto-style4">
		If...Then...Else</span><span class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span></b><span class="auto-style4">
		:Branching and execute a statement when a condition is True or False</span></font></font><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><font face>
		<span style="color: blue" class="auto-style4">If&#8230;Then&#8230;ElseIf&#8230;Else</span></font></b><font face=""><span class="auto-style4"> 
		:Let you decide multiple courses of action, for example, when you need 
		three or more Msgbox</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">Select Case</span><span class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span></b><span class="auto-style4">
		:Selecting a branch from a set of conditions</span></p>
		<p class="auto-style4">The syntax for 
		If&#8230;Then&#8230;Else statement is:&nbsp;</p>
		<p class="auto-style10">
		If condition Then<br>
&nbsp;&nbsp;&nbsp; statements1<br>
		Else<br>
		&nbsp;&nbsp;&nbsp; statements2<br>
		End If</p>
		<p><span class="auto-style8"><br class="auto-style1">
		</span><font face>
		<span class="auto-style4">You can use any number of ElseIf lines in a block IF statement, each 
		with its own condition. It all depends on how complex the conditions and 
		your problem are that you need to evaluate. Although the Else clause is 
		optional, but because there 
		is still a possibility that none of the stated conditions is true, you 
		want to make it catches all conditions by providing with a last Else 
		clause. The last Else in your list of conditions would act if none of 
		the primary conditions is true. Take note that a 
		single line If&#8230;Then&#8230;ElseIf&#8230;Else statements don&#8217;t need and End If 
		statement, but a block If&#8230;Then&#8230;ElseIf&#8230;Else statements do need an End If. 
		The syntax for If&#8230;Then&#8230;ElseIf&#8230;Else statement is:</span></p>
		<p class="auto-style10">
		If condition1 Then<br>
		&nbsp; &nbsp;statements1<br>
		ElseIf condition2 Then<br>
		&nbsp; &nbsp;statements2<br>
		ElseIf condition3 Then<br>
		&nbsp;&nbsp;&nbsp;statements3<br>
		Else<br>
		&nbsp;&nbsp;&nbsp;Statements4<br>
		End If</p>
		<p><span class="auto-style8"><br class="auto-style1">
		</span><font face>
		<span class="auto-style4">Nested IF statements are quite complicating but they are can be very 
		useful for certain complex situations that you need to check. Each 
		nested IF statement must be complete with its End If clause. For 
		example, if you nest one block IF statement within another block IF 
		statement and forget the End If clause for the nested If, VBA would 
		assume that you only want the outer End, and that will give you very 
		different result. In the following syntax for a nested IF, only when 
		condition1 is False, the nested If statements would not execute, but VBA 
		will branch straight to the outer Else line and continues execution from 
		there. If condition1 is True, the code will execute the nested IF 
		condition2, condition3, and so on.</span></p>
		<p class="auto-style10">
		If condition1 Then<br>
		&nbsp;&nbsp; If condtion2 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If condition3 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statements1<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ElseIf condition4 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statements2<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statements3<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp; Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If condition5 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement4<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp; End If<br>
		Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement5<br>
		End If</p>
		<p><span style="font-family: Arial"><b><br>
		</b></span>

<font face="">
		<span class="auto-style1">
		<span class="auto-style19"><strong>Running several statements on the same 
		Object</strong></span></span><span style="font-size: 10.0pt; font-family: Arial"><br>
		</span></font></font></font></font><span class="auto-style4"><br>In VBA, usually you must specify an object before you can run one of its 
		methods or change one of its properties. You can use the <b>With</b> 
		statement to specify an object once for an entire series of statements. 
		Select Case statement provides an alternative to multiple ElseIf 
		statements. You use Select Case when the decision you need to make in 
		the code depends on one variable or expression that has more than three 
		different values that you need to examine. Case Else is similar to the 
		Else clause in an IF statement. The expression is known as <i>test case</i></span><font face=""><span style="font-size: 10.0pt; font-family: Arial">.</span></p>
		<p class="auto-style10">
		Select Case Expression<br>
		&nbsp;&nbsp; Case Expression1<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement1<br>
		&nbsp;&nbsp; Case Expression2<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement2<br>
		&nbsp;&nbsp; Case Expression3<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement3<br>
		&nbsp;&nbsp; Case Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; statement4<br>
		End Select</p>
		<p><span style="font-size: 10.0pt; font-family: Arial"><br>
		</span></font>
		<span style="font-size: 15.0pt" class="auto-style1"><strong>Using Loops structure to repeat code</strong></span><font face=""><span style="font-family: Arial"><b><br>
		</b></span>
		<span class="auto-style4"><br>A loop is a 
		structure that runs through a number of statements in a procedure, 
		looping back again to the beginning of the structure once it has 
		finished execution. Each cycle of execution of a loop is called <i>
		reiteration</i>. A fixed-iteration loop (loop that repeats an iteration 
		a fixed number of times) typically use numerical expression, where as 
		indefinite-iteration loop (loop that repeats an iteration a flexible 
		number of times) typically use logical expression.&nbsp;</span></p>
		<p><span class="auto-style11">
		Fixed-iteration</span><span class="auto-style4"> 
		loop types:</span></font><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><font face>
		<span style="color: blue" class="auto-style4">For...Next</span><span class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span></font></b>

<font face="">
		<span class="auto-style4">: Using a 
		counter to repeats a statement or a sequence of actions a specified 
		number of times</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">For Each...Next</span></b><span class="auto-style4">: 
		Repeating an action or a group of statements for each object in a VBA 
		collection</span></p>
		<p><span class="auto-style4">There are five 
		types of <i>Indefinite-iteration </i>loop of using While or Until:</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><font face>
		<span style="color: blue" class="auto-style4">Do While&#8230;Loop</span><span class="auto-style4">
		</span></font></b><font face>
		<span class="auto-style4">:Continue 
		to perform a statement or a sequence of actions if a condition is True, 
		and stops only when the<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&nbsp;condition becomes False</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">Do Until&#8230;Loop</span><span class="auto-style4">&nbsp;&nbsp;
		</span></b><span class="auto-style4">:Continue 
		to perform a statement or a sequence of actions if a condition is False, 
		and stops only when the<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&nbsp;condition becomes True</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">Do&#8230;Loop While</span></b><span class="auto-style4"> 
		:Performs an action or a sequence of actions once and then repeats it 
		while a condition is True until it becomes<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&nbsp;False</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">Do&#8230;Loop Until</span></b><span class="auto-style4">&nbsp;&nbsp; 
		: Performs an action or a sequence of actions once and then repeats it 
		while a condition is False until it becomes<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&nbsp;True</span><b><span style="color: blue" class="auto-style8"><br class="auto-style1">
		</span><span style="color: blue" class="auto-style4">While&#8230;Wend</span><span class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp; </span></b>
		<span class="auto-style4">
		:Same like Do&#8230;Loop While but this one almost never see people use these 
		days</span><span style="font-size: 10.0pt; font-family: Arial"><br>
&nbsp;</span></p>
		<table border="0" width="80%" cellspacing="0" cellpadding="0" id="table6">
			<tr>
				<td>
				<table border="0" cellspacing="0" cellpadding="0" width="585" height="178">
					<tr>
						<td>
						<img border="0" src="Images/do_loops_1.gif" height="45" width="292"></td>
						<td>
						<img border="0" src="Images/do_loops_2.gif" height="45" width="291"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_loops_3.gif" height="44" width="292"></td>
						<td>
						<img border="0" src="Images/do_loops_4.gif" height="44" width="291"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_loops_5.gif" height="45" width="292"></td>
						<td>
						<img border="0" src="Images/do_loops_6.gif" height="45" width="291"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_loops_7.gif" height="44" width="292"></td>
						<td>
						<img border="0" src="Images/do_loops_8.gif" height="44" width="291"></td>
					</tr>
				</table>
				<p>&nbsp;</td>
			</tr>
		</table>
		<p><br>
		<span class="auto-style4">In the above 
		indefinite-iteration loop types, because you can construct the <b>
		Do&#8230;Loop</b> with the <b>While</b> or <b>Until</b> qualifiers at the 
		beginning or at the end, it give you a lot of flexibility whether you 
		want to execute the loop only once, given that your first condition is 
		True at the beginning. There are some examples in the later section 
		where you will be able to savour these looping power.<br>
&nbsp;</span></p>
		<p style="margin-left:6.5in" align="right">
		<font size="2" class="auto-style4"><a name="if-then-else"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p>
		</font></font>
		<p><span class="auto-style8"><br class="auto-style1">
		</span>

<font face="">
		<span class="auto-style4">Example 1.1 is a simple <b>If&#8230;Then&#8230;Else</b> conditional statement. If 
		the first sheet name is &#8220;template&#8221; and if user clicks Cancel, the 
		procedure stops; otherwise it will call the macro. If the first sheet 
		name is not &#8220;template&#8221;, it exits sub procedure right away.</span><span style="color:maroon" class="auto-style4"><br>
		</span><span style="color:maroon" class="auto-style1">
		<font size="2" class="auto-style8">Private Sub Workbook_Open()<br>
		On Error Resume Next<br>
&nbsp; <b>If</b> Sheets(1).Name = &quot;template&quot; <b>Then</b><br>
		&nbsp;&nbsp;&nbsp;&nbsp; <b>If</b> MsgBox(&quot;Do you want to continue?&quot;, 
		vbOKCancel, &quot;Message Alert&quot;)=vbCancel <b>Then</b><br>
&nbsp; Exit Sub</font></span><span style="color:maroon" class="auto-style8"><br class="auto-style1">
		</span><span style="color:maroon" class="auto-style4">&nbsp;</span><span style="color:green" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&#8216; then call your Macro<br>
		</span>
		<span style="color:maroon" class="auto-style4">&nbsp; <b>Else</b><br>
&nbsp; Exit Sub<br>
&nbsp; <b>End If</b><br>
		End Sub</span></p>
		<p><span class="auto-style4"><br>
		<br>
		</span><font face>
		<span class="auto-style4">Example 1.2 another <b>If&#8230;Then&#8230;Else</b> statement that asks for user&#8217;s 
		input of the value or text to select, from the active sheet&#8217;s used 
		range. It selects all the cells that have the same value or text the 
		user had selected. Press OK, it fills the selected cells with Green.</span><span style="color: maroon" class="auto-style4">
		</span><span class="auto-style4">In 
		this example, I selected the value zero.</span><font face="arial"><span style="color:maroon" class="auto-style4"><br>
		</span></font><span style="color:maroon" class="auto-style4">Dim rng As Range, iArea As Range, iRange As Range<br>
		Dim Valu As String, i As Long<br>
		Set iArea = Range(Cells(1, 1), ActiveCell.SpecialCells(xlLastCell))<br>
		Valu = InputBox(&quot;enter the value or text to select&quot;)<br>
		<b>For Each</b> rng In iArea<br>
		&nbsp; <b>If</b> rng.Text = Valu <b>Then</b><br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>If</b> i = 0 <b>Then</b><br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set iRange = rng<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = 1<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Else</b><br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set iRange = 
		Union(iRange, rng)<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>End If</b><br>
		&nbsp; <b>End If</b><br>
		<b>Next</b> rng<br>
		iRange.Select<br>
		With Selection.Interior<br>
		&nbsp; .ColorIndex = 50<br>
		&nbsp; .Pattern = xlSolid<br>
		End With</span><font size="2"><span style="font-family:&quot;Courier New&quot;;
color:maroon"><font face="arial"><br>
&nbsp;</font></span></font><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""><font face=""></p>
		<table border="0" width="65%" cellspacing="0" cellpadding="0" id="table7">
			<tr>
				<td>
				<table border="0" cellspacing="0" cellpadding="0" width="479" height="167">
					<tr>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_1.gif" height="42" width="240"></td>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_2.gif" height="42" width="239"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_3.gif" height="42" width="240"></td>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_4.gif" height="42" width="239"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_5.gif" height="41" width="240"></td>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_6.gif" height="41" width="239"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_7.gif" height="42" width="240"></td>
						<td>
						<img border="0" src="Images/IfThenElse_Ex1.2_8.gif" height="42" width="239"></td>
					</tr>
				</table>
				<p>&nbsp;</td>
			</tr>
		</table>
		<font face="arial">
		<p><span style="font-size:10.0pt;font-family:Arial"><a name="spare_parts_stocking_decisions_automation"></a>
		</span> </font>
		</font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font>
		<span class="auto-style4">Example 1.3 The following procedure has a rather long complex nested 
		If&#8230;Then&#8230;ElseIf statements that I applied to one of my office work. I 
		will show you a section of the statements so that you can more easily 
		understand the nested If&#8230;Then&#8230;ElseIf structure which can sometimes gets 
		very long and confusing especially for the VBA novices. &nbsp;You can also </span> 

<font face="">
		<span style="font-size:10.0pt;font-family:Arial">
		<span class="auto-style4">download</span></span><span class="auto-style4"> the 
		original procedure which run base on different conditions and column of 
		factual data, and help to make useful decisions. It then populates the 
		outcome in the last two columns of the worksheet. In other cases, you 
		can always combine If..Then..ElseIf statements with some other loop 
		structure. Instead of using the Find method, you can use the InputBox 
		method to ask for user&#8217;s input, and store the different column numbers 
		in the variables. Note: raw data in the download example are not the 
		true cases.<br>
		<br>
		<a href="Sub_VBA/IfThenElseIfElseEndIf.zip">DOWNLOAD</a> 
		this example.</span></p>
		<p align="right" class="auto-style4">		
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></p>
		<font face="arial">
		<p class="auto-style12">Sub Opt_Plan_analysis()<br>
		<br>
		Dim i As Long, lastrow As Long, loc As Byte, cos As Byte, m As Byte, ec 
		As Byte, summ As Byte, ttsl As Byte, sga As Byte, sgm As Byte, _<br>
		sgt As Byte, ls As Byte, m12 As Byte, tpmvs As Byte, obm As Byte, remk 
		As Byte, align As Byte, Location As String, OptMin As Integer, _<br>
		UnitCost As Long, EventClassification As String, TotalTSL As Integer, 
		SGAnnualDmd As Long, SGMOU As Byte, LocalSource As String, _<br>
		TPM_VitalSpares As String, ObsoletePartMOU As Byte, Remark As String, 
		Reason As String, SG_m_1 As Integer, SG_m_2 As Integer, _<br>
		SG_m_3 As Integer, SG_m_6 As Integer, SG_m_7 As Integer, 
		SGlast12months_average As Integer, SGlast12months_max As Integer, _<br>
		SGlast12months_min As Integer, SGlast3months_average As Integer</p>
		<p><span style="color: #800000" class="auto-style4">
		Const keep = &quot;disagree to reduce TSL to Opt-Min: keep current TSL of &quot;<br>
		lastrow = Cells(65536, 1).End(xlUp).Row<br>
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;location&quot;, After:=[A1]).SelectlLoc = 
		ActiveCell.Column<br>
		</span></font></font><span class="auto-style4"></font>
		</span>
		<span style="font-family: Arial; " class="auto-style8">
		<span style="color: #339966" class="auto-style1">' or alternatively as,</span><font color="#008080"><span class="auto-style1">
		</span>
		</font></span>

<font face="">
		<span style="color: #800000" class="auto-style4">
		<br>
		</span><font color="#0000FF">
		<span class="auto-style4">
		'&nbsp; loc = Range(Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;location&quot;, 
		After:=Cells(1, 1), LookIn:=xlValues, LookAt:=xlWhole, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SearchOrder:=xlByRows, SearchDirection:=xlNext, 
		MatchCase:=True).Address).Column<br>
		'&nbsp; or loc =&nbsp; 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;location&quot;, After:=Cells(1, 1).Column</span></font></font><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span>

<font face="">
		<span style="color: #800000" class="auto-style4">cos = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;st*Cost&quot;, After:=[A1]).Column<br>
		m = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;opt*Min&quot;, After:=[A1]).Column<br>
		ec = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;event*class*&quot;, After:=[A1]).Column<br>
		summ = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;summary*&quot;, After:=[A1]).Column<br>
		ttsl = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;Total*TSL*&quot;, After:=[A1]).Column<br>
		sga = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;SG*Annual*&quot;, After:=[A1]).Column<br>
		sgm = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;SG*MOU&quot;, After:=[A1]).Column<br>
		ls = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;loc*source&quot;, After:=[A1]).Column<br>
		tpmvs = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;TPM*VIT*CE*&quot;, After:=[A1]).Column<br>
		obm = 
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;obsolete*mou*&quot;, 
		After:=[A1]).Column<br>
		remk = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;*remark*&quot;, After:=[A1]).Column<br>
		align = Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;align*&quot;, After:=[A1]).Column</span></p>
		<p class="auto-style12">For i = 2 To lastrow</p>
		<p class="auto-style12">Location = Cells(i, loc).Value<br>
		UnitCost = Cells(i, cos).Value<br>
		OptMin = Cells(i, m).Value<br>
		EventClassification = Cells(i, ec).Value<br>
		TotalTSL = Cells(i, ttsl).Value<br>
		SGAnnualDmd = Cells(i, sga).Value<br>
		SGMOU = Cells(i, sgm).Value<br>
		SG_m_1 = Cells(i, sga).Offset(, -1).Value<br>
		SG_m_2 = Cells(i, sga).Offset(, -2).Value<br>
		SG_m_3 = Cells(i, sga).Offset(, -3).Value<br>
		SG_m_6 = Cells(i, sga).Offset(, -6).Value<br>
		SG_m_7 = Cells(i, sga).Offset(, -7).Value<br>
		LocalSource = Cells(i, ls).Value<br>
		TPM_VitalSpares = Cells(i, tpmvs).Value<br>
		ObsoletePartMOU = Cells(i, obm).Value<br>
		Remark = Cells(i, remk).Value<br>
		Reason = Cells(i, align).Value</p>
		<p><span style="color: #800000" class="auto-style4">On 
		Error Resume Next<br>
		If Location = &quot;8800&quot; Then<br>
		&nbsp;&nbsp;&nbsp; If OptMin = 0 And TotalTSL &gt; 0 Then&nbsp; </span>
		<span style="color: #339966" class="auto-style4">' to 
		remove Safety Stock Level?</span><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span>

<font face="">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If SGMOU &gt; 0 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If 
		(TPM_VitalSpares Like &quot;TEC*&quot; Or TPM_VitalSpares Like &quot;UMC*&quot; Or 
		TPM_VitalSpares Like &quot;Char*&quot;) Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;disagree to remove TSL: &quot; &amp; TPM_VitalSpares<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Other&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf TPM_VitalSpares Like &quot;SSMC*&quot; And LocalSource Like &quot;Consign*&quot; Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remark 
		= &quot;disagree to remove TSL: SSMC TPM program spare with Consignment TSL 
		in plant 8800&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;ContractCommit&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End 
		If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ElseIf SGMOU = 0 And 
		ObsoletePartMOU = 0 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If 
		TPM_VitalSpares = vbNullString Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to remove TSL (SG 12months MOU 0, and not vital spare)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp;&nbsp; ElseIf OptMin = TotalTSL Then&nbsp; </span>
		<span style="color: #339966" class="auto-style4">
		'Optimized Min level = Safety Stock Level?</span><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span><span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Remark = &quot;no mismatch as 
		Opt-Min = site TSL&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp; ElseIf OptMin &gt; 0 And TotalTSL &gt; OptMin Then &nbsp;</span><font color="#800000"><span class="auto-style4">&nbsp;</span></font><span style="color: #339966" class="auto-style4">' 
		to reduce Safety Stock Level?</span><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span><span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; With Application<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SGlast12months_max = 
		.Max(Cells(i, sga).Offset(, -12).Resize(, 12))<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SGlast12months_min = 
		.Min(Cells(i, sga).Offset(, -12).Resize(, 12))<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SGlast3months_average = 
		.RoundUp(.Average(Cells(i, sga).Offset(, -3).Resize(, 3)), 0)<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If SGMOU &gt; 0 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If 
		.CountA(Cells(i, sga).Offset(, -7).Resize(, 7)) = 0 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remark = &quot;agree to reduce TSL 
		to Opt-Min (no usage in SG in last 7 months)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf SG_m_1 &lt; SG_m_2 And SG_m_2 &lt; SG_m_3 Then &nbsp;&nbsp;</span><span class="auto-style4"><font color="#339966">' 
		captures last 3 months slow-dow</font></span><font color="#339966" face="arial"><span class="auto-style4">n 
		in demand</span></font><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span><span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		If .RoundUp(.Average(Cells(i, sga).Offset(, -3).Resize(, 3)), 0) = 
		OptMin Or _<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.RoundDown(.Average(Cells(i, sga).Offset(, 
		-3).Resize(, 3)), 0) = OptMin Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to reduce TSL to Opt-Min (consecutive descending demand 
		in last 3 months)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf TotalTSL = .RoundUp(.Average(Cells(i, sga).Offset(, -3).Resize(, 
		3)), 0) Or _<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		TotalTSL = .RoundDown(.Average(Cells(i, sga).Offset(, -3).Resize(, 3)), 
		0) Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = keep &amp; TotalTSL &amp; &quot; (consecutive descending demand in last 3 
		months)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;DemandMapping&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf OptMin &lt; .Average(Cells(i, sga).Offset(, -3).Resize(, 3)) Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remark = &quot;disgree to reduce TSL 
		to Opt-Min: propose TSL change to &quot; &amp; SGlast3months_average _<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		&amp; &quot; (consecutive demand decrease in last 3 months)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;DemandMapping&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		End If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElseIf SGMOU = 2 And 
		SGlast12months_max - SGlast12months_min &gt; 4 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to reduce TSL to Opt-Min (there was a demand surge of &quot; 
		&amp; SGlast12months_max &amp; &quot; )&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End 
		If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ElseIf SGMOU = 0 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to reduce TSL to Opt-Min (no usage in SG in last 12 
		months)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End With<br>
		&nbsp;&nbsp;&nbsp; ElseIf OptMin &gt; TotalTSL And TotalTSL &gt; 0 Then &nbsp;&nbsp;</span><span style="color: #339966" class="auto-style4">' 
		to increase Safety Stock Level?</span><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span><span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If SGMOU = 1 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If 
		(OptMin - TotalTSL) * UnitCost &lt; 5000 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to increase TSL to Opt-Min (SG MOU1 &amp; ext.cost&lt;$5K)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf (OptMin - TotalTSL) * UnitCost &gt; 10000 And EventClassification 
		Like &quot;*Fast&quot; Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to increase TSL (SG MOU1, ext.cost&gt;$10K but it's global 
		Fast-Mover)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ElseIf (OptMin - TotalTSL) * UnitCost &gt; 10000 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;disagree to increase TSL; support thru CDC (SG MOU1, 
		ext.cost&gt;$10K,non-Fast Mover)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;DemandMapping&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to increase TSL to Opt-Min&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reason = 
		&quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End 
		If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ElseIf SGMOU &gt; 1 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If 
		(OptMin - TotalTSL) * UnitCost &gt; 20000 Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;disagree to increase TSL; propose support thru CDC (there was 
		usage but ext.cost $20K)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;DemandMapping&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to increase TSL to Opt-Min (SG used at least twice in 
		last 12 months &amp; ext.cost&lt;$20K)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End 
		If<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp;&nbsp; ElseIf OptMin &gt; TotalTSL And TotalTSL = 0 Then &nbsp;&nbsp;</span><font color="#339966"><span class="auto-style4">' 
		to set new Safety Stock Level?</span></font><span style="color: #800000" class="auto-style8"><br class="auto-style1">
		</span><span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If OptMin * UnitCost &lt; 1000 
		Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;agree to set new TSL to Opt-Min (ext.cost &lt;$1000)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Agree with SIMPLE&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Remark = &quot;need re-confirmation on setting new TSL (ext.cost &gt;$1000)&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Reason = &quot;Other&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
		&nbsp;&nbsp;&nbsp; End If<br>
		Else<br>
		&nbsp; Remark = &quot;* need check further&quot;<br>
		&nbsp; Reason = &quot;Other&quot;<br>
		End If<br>
		Cells(i, remk).Value = Remark<br>
		Cells(i, align).Value = Reason</span></p>
		<p class="auto-style12">Next i<br>
		End Sub</p>

		</font>

		</font>
		<p class="MsoNormal" style="line-height: 12.0pt">
		<font face="" class="auto-style4">Above loop 
		decision is only an evaluation for ONE plant. Imagine if you have 10 
		plants/sites or more to evaluate?? You certainly need a loop structure 
		programming to handle your job. Using spreadsheet filters probably will 
		take you many hours or more than a day. Using pivot table, there is no 
		way you can achieve this level of details and analysis to make effective 
		decisions. No doubt about it.</font></p>
		<p class="auto-style4" style="line-height: 12.0pt">&nbsp;</p>

<font face="">
		
		<p style='margin-left:6.5in' align="right">		
		<font size="2" class="auto-style4"><a name="select_case"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p>

		<p class="MsoNormal" style="line-height: 12.0pt">
		<span class="auto-style4">Example 3.1 using <b>
		Select Case</b> statement within the <b>For&#8230;Next</b> loop, to find the 
		column of std cost, then insert a column to its right, and fill in the 
		cost category in letters base upon the values of std cost It carries on 
		looping until the last row of data is reached.<br>
		</span>
	</font>

		<span style="color:maroon" class="auto-style4">Dim c As Integer, i As Long, lastrow As Long<br>
		lastrow = Cells(65536, 1).End(xlUp).Row<br>
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;st*cost&quot;, After:=[A1], 
		SearchDirection:=xlPrevious).Select<br>
		ActiveCell.Select<br>
		c = ActiveCell.Column<br>
		ActiveCell.Offset(0, 1).EntireColumn.Insert<br>
		<b>For</b> i = 2 To lastrow<br>
		&nbsp;&nbsp;&nbsp; <b>Select Case</b> Cells(i, c).Value<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 10<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. F&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 100<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. E&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 500<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. D&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 1000<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. C&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 5000<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. B&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, c + 1).Value = 
		&quot;Cat. A&quot;<br>
		&nbsp;&nbsp;&nbsp; <b>End Select</b><br>
		<b>Next</b></span><font face=""><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;;
color:maroon"><br>
		<br>
		</span>
		<img border="0" src="Images/select_case_Ex3.1.gif" width="166" height="157"></p>
		<p><br>
		<span style="font-size:10.0pt;font-family:Arial"><br>
		<br>
		E</span></font><span class="auto-style4">xample 3.2 using <b>
		Select Case</b> statement. The code checks for two column headers name, 
		identify the columns and stored the values in two variables. It then 
		inserts a column to input answers and uses &#8220;Min Level&#8221; &#8211; &#8220;Total TSL&#8221; as 
		text case. It runs through all the conditions and take action 
		accordingly.</span><font face=""><span style="color:maroon" class="auto-style8"><br class="auto-style1">
		</span><span style="color:maroon" class="auto-style4">Dim cMin As Integer, cTSL As Integer, i As Long, lastrow As Long<br>
		lastrow = Cells(65536, 1).End(xlUp).Row<br>
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;Min*&quot;, After:=[A1], 
		SearchDirection:=xlPrevious).Select<br>
		ActiveCell.Select<br>
		cMin = ActiveCell.Column<br>
		Rows(&quot;1:1&quot;).Cells.Find(What:=&quot;Total TSL*&quot;, After:=[A1], 
		SearchDirection:=xlPrevious).Select<br>
		ActiveCell.Select<br>
		cTSL = ActiveCell.Column<br>
		ActiveCell.Offset(0, 1).EntireColumn.Insert<br>
		<b>For</b> i = 2 To lastrow<br>
		&nbsp;&nbsp;&nbsp; <b>Select Case</b> Cells(i, cMin).Value - Cells(i, 
		cTSL).Value<br>
		&nbsp;&nbsp;&nbsp; Case Is = 0<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, cTSL + 
		1).Value = &quot;no mismatch&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &lt; 0<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, cTSL + 
		1).Value = &quot;reduce TSL?&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Is &gt; 0<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, cTSL + 
		1).Value = &quot;increase TSL?&quot;<br>
		&nbsp;&nbsp;&nbsp; Case Else<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, cTSL + 
		1).Value = &quot;others&quot;<br>
		&nbsp;&nbsp;&nbsp; <b>End Select</b><br>
		<b>Next</b></span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;;
color:maroon"><br>
		<br>
		<img border="0" src="Images/select_case_Ex3.2.gif" width="144" height="103"></span></p>
		<p align="right"><font face="Arial" size="2"><a name="for_next"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		<span class="auto-style4">Return To Top</span></a></font></p>
		<p><span class="auto-style4">Example 4.1.1 a 
		simple <b>For&#8230; Next</b> loop. This code will add number 99 on Cells 
		B1,C1...to F1 and B4,C4...to G4, and so on</span><span style="font-family:&quot;Courier New&quot;;
color:maroon" class="auto-style8">.</span></font><span style="color:maroon" class="auto-style8"><br class="auto-style1">
		</span>

<font face="">
		
		<span style="color:maroon" class="auto-style4">Dim r As Long, c As Integer<br>
		Range(&quot;B1&quot;).Select<br>
		&nbsp; <b>For</b> r = 0 To 2<br>
		&nbsp; <b>For</b> c = 0 To 4<br>
		&nbsp;&nbsp;&nbsp; ActiveCell.Offset(r * 3, c).Value = 99<br>
		&nbsp; <b>Next</b> c<br>
		&nbsp; <b>Next</b> r</span><font size="2"><span style="font-family:&quot;Courier New&quot;;
color:maroon"><br>
		</span>
		</font>

<font face="">
		
		<span style="font-size: 10.0pt; font-family: Courier New; color: maroon"><br>
		<img border="0" src="Images/for_next_Ex4.1.gif" width="159" height="112"></span></p>

		<p>&nbsp;</p>

<div align="left">

<table border="0" width="99%" cellspacing="0" cellpadding="0" id="table14" height="396">
	<tr>
		<td width="553" height="200" align="left" valign="top">
		<font face="arial">
		<span class="auto-style4">Example 4.1.2 </span>
		</font><span class="auto-style4">Fill as 1,2,3.... on alternate 
		column, and continues with every row, using Step.</span><font color="#0000FF"><br class="auto-style4">
		</font><font size="2" color="#800000" class="auto-style4">Dim i As 
		Integer, j As Integer, k As Integer<br>
		<br>
		<b>For</b> i = 1 To 10<br>
		<b>For</b> j = 1 To 10 <b>Step 2<br>
		</b>&nbsp;&nbsp; 
		k = k + 1<br>
&nbsp;&nbsp; Cells(i, j) = k<br>
		<b>Next</b> j<br>
		<b>Next</b> i</font></td>
		<td height="200" align="left" valign="top">
		<img border="0" src="Images/For..Next_Step_01.gif" width="213" height="172"></td>
	</tr>
	</font>

	</font>

	<tr>
		<td width="553" height="228" align="left" valign="top">
		
<font face="">
		<font face="arial">
		<span class="auto-style4">Example 4.1.3 </span>
		</font><span class="auto-style4">Fill as 1,2,3.... starting from 
bottom up, on alternate column, and alternate row, using Step -2.</span></font><font face="arial" color="#800000"><span class="auto-style8"><br class="auto-style1">
		</span><span class="auto-style4">Dim i As Integer, j As Integer, k As Integer<br>
		<br>
		k = 1<br>
		<b>For</b> i = 9 To 1 <b>Step -2</b><br>
		<b>For</b> j = 10 To 1 <b>Step -2</b><br>
		&nbsp;&nbsp; Cells(i, j) = k<br>
		&nbsp;&nbsp; k = k + 1<br>
		<b>Next</b> j<br>
		<b>Next</b> i</td>


<font face="">
		<td height="228" align="left" valign="top">
		<img border="0" src="Images/For..Next_Step_04.gif" width="219" height="162"></td>
	</tr>
	<tr>
		<td width="553" align="left" valign="top">
		<span style="font-size: 10.0pt; font-family: Arial">

<font face="">
		<font face="arial">
		E</font></font></span><span class="auto-style4">xample 4.1.4</span><font size="2" class="auto-style4"> Fill as 
		1,3,5,7,9 on alternate column and alternate row, using&nbsp; Step 2.<br>
		</font><span class="auto-style4"></font></span>
		<font size="2" color="#800000" class="auto-style4">Dim i As 
		Integer, j As Integer<br>
		<br>
		<b>For</b> i = 1 To 10 <b>Step 2</b><br>
		<b>For</b> j = 1 To 10 <b>Step 2</b><br>
&nbsp;&nbsp; Cells(i, j) = j<br>
		<b>Next</b> j<br>
		<b>Next</b> i</font><p><br>
&nbsp;</td>
		<td align="left" valign="top">
		<img border="0" src="Images/For..Next_Step_02.gif" width="214" height="166"></td>
	</tr>

<font face="">
	<tr>
		<td width="553" align="left" valign="top">
		
<font face="">
		<span style="font-family: Arial" class="auto-style4">
		Example 4.1.5</span></font><font size="2" class="auto-style4">&nbsp; 
Fill as 1,2,3....and so on, on alternate column and alternate row.<br>
		Shade GREEN on every alternate row, from column 1 to 9.</font><font face="Courier New" size="2" color="#800000" class="auto-style8"><br class="auto-style1">
		<span class="auto-style1">Dim i As Integer, j As Integer, k As Integer, L As Integer<br>
		<br>
		<b>For</b> i = 1 To 10 <b>Step 2</b><br>
		<b>For</b> j = 1 To 10 </span> <b><span class="auto-style1">Step 2<br>
		</span>
</b> </font><font size="2" color="#800000" class="auto-style4">&nbsp;&nbsp; L = L 
+ 1<br>
&nbsp;&nbsp; Cells(i, j) = L<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For k = 1 To 9&nbsp; </font>
		<font color="#008000"><span class="auto-style4">' change columns range as 
you suit</span></font><font face="Courier New" size="2" color="#800000" class="auto-style8"><br class="auto-style1">
		<span class="auto-style1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cells(i, 
k).Interior.ColorIndex = 4<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next k<br>
		<b>Next</b> j<br>
		<b>Next</b> i</span></font></td>
		<td align="left" valign="top">
		<img border="0" src="Images/For..Next_Step_03.gif" width="210" height="164"></td>
	</tr>
</table>
</div>
		<p align="right" class="auto-style4">		
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></p>
		<p><br class="auto-style4">
		<font face="arial">
		<span class="auto-style4">Example 4.2 another 
		demonstration using multiple <b>For&#8230; Next</b> loop.
		The procedure 
		will resize 4 columns to the Right from B2, then copy the extended Range 
		(by stepping through every 3 Rows) and paste to one cell down from the 
		last used Cell in Column G. The code then copy values from Sheet1 cells 
		B2,C2&#8230;E2 to column B in Sheet2, so that first value (B2) will go to B2 
		and C2 in B3, D2 in B4 and so on.</span><span style="color:maroon" class="auto-style4"><br>
		</span>
		</font><span style="color:maroon" class="auto-style4">Dim r As Long, rDes As Long<br>
		Dim i As Long, j As Long, k As Long<br>
		With Sheets(&quot;Sheet1&quot;)<br>
		Cells(, 1).Resize(2, 5).Copy Cells(, &quot;G&quot;)<br>
		&nbsp; <b>For</b> r = 2 To Cells(Rows.Count, &quot;A&quot;).End(xlUp).Row Step 4<br>
		&nbsp; rDes = .Cells(Rows.Count, &quot;G&quot;).End(xlUp).Row + 1<br>
		&nbsp;&nbsp;&nbsp; Cells(r, &quot;A&quot;).Resize(, 5).Copy Cells(rDes, &quot;G&quot;)<br>
		&nbsp; <b>Next</b> r<br>
		&nbsp; Range(&quot;A2&quot;, Range(&quot;A2&quot;).End(xlToRight).End(xlToRight)).Copy<br>
		&nbsp; Range(&quot;G2&quot;).Insert Shift:=xlDown<br>
		End With<br>
		</span><span style="font-family:&quot;Courier New&quot;;
color:maroon"><font face="arial" size="2">&nbsp;</font></span></p>
		<font face="arial">
		<table border="0" width="78%" cellspacing="0" cellpadding="0" id="table8">
			<tr>
				<td>
				<table border="0" cellspacing="0" cellpadding="0" width="581" height="235">
					<tr>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_1.gif" height="59" width="194"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_2.gif" height="59" width="193"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_3.gif" height="59" width="194"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_4.gif" height="59" width="194"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_5.gif" height="59" width="193"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_6.gif" height="59" width="194"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_7.gif" height="58" width="194"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_8.gif" height="58" width="193"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_9.gif" height="58" width="194"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_10.gif" height="59" width="194"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_11.gif" height="59" width="193"></td>
						<td>
						<img border="0" src="Images/for_next_Ex4.2_12.gif" height="59" width="194"></td>
					</tr>
				</table>
				<p>&nbsp;</td>
			</tr>
		</table>
		</font><font face="Courier New">
		<p>
		<font face="arial">
		<span style="color: #339966" class="auto-style4">
		&#8217; below multiple For..Next loop shows you a way to transpose the output 
		to Sheet2</span><span style="color:maroon" class="auto-style4"><br>
		</span><span style="color:maroon" class="auto-style1">
		<font size="2" class="auto-style8">Range(&quot;B6&quot;).Select<br>
		&nbsp; <b>For</b> i = 0 To 2<br>
		&nbsp;&nbsp;&nbsp; <b>For</b> j = 0 To 3<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ActiveCell.Offset(i * 4, j).Copy<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sheets(&quot;Sheet2&quot;).Activate<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Range(&quot;B&quot; &amp; 2 + k).Select<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Selection.PasteSpecial 
		Paste:=xlPasteValuesAndNumberFormats<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sheets(&quot;sheet1&quot;).Activate<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; k = k + 1<br>
		&nbsp;&nbsp;&nbsp; <b>Next</b> j<br>
		&nbsp; <b>Next</b> i</font></span></font></p>
		<table border="0" width="19%" cellspacing="0" cellpadding="0" id="table9">
			<tr>
				<td>
				<img border="0" src="Images/for_next_Ex4.2_sheet2.gif" width="132" height="233"></td>
			</tr>
		</table>
		<p>&nbsp;</p>
		<p></font>

		<font size="2">

<font face="">
		<font face="arial">
		<span style="font-family: Arial"><br>
		</span></font>
		</font>

		</font><span class="auto-style4">Example 4.3 this <b>For&#8230;Next</b> loop will find the value in B1 and fill 
		in red the cells in Column A that are found to have the same value as 
		B1.</span><font face=""><font face="arial"><span class="auto-style4"><br>
		</span></font><font face="Courier New" size="2"><font color="#800000">
		<span class="auto-style4">Dim findit, r<br>
		findit = Split(Range(&quot;B1&quot;), &quot;,&quot;)<br>
		<b>For</b> r = 0 To UBound(findit)<br>
		&nbsp; Columns(&quot;A:A&quot;).Select<br>
		&nbsp; Selection.FormatConditions.Add Type:=xlCellValue, 
		Operator:=xlEqual, _<br>
		&nbsp;&nbsp;&nbsp; Formula1:=findit(r)<br>
		&nbsp; Selection.FormatConditions(1).Interior.ColorIndex = 3<br>
		<b>Next</b> r</span></font><span style="color: #CC3300"><br>
		<img border="0" src="Images/for_next_Ex4.3.gif" width="94" height="89"></span></font></p>
		<p><font face><font face="arial">
		<span style="font-size: 12.0pt; font-family: Times New Roman; color: #CC3300">
		<br>
		</span></font></font><code style="font-family: Courier New">
		<span class="auto-style1"><span class="auto-style8">The syntax of a 
		</span><span class="auto-style13">Split</span><span class="auto-style8"> function 
		is:</span><br class="auto-style8">
		</span></code>
		<span style="color: #800000" class="auto-style4">Split(expression [, delimiter [, count [, 
		compare]]])</span></p>
		<ul>
			<li>
			<p style="text-indent: -.25in; margin-left: .25in">
			<span style="font-style: normal; font-variant: normal; font-weight: normal; " class="auto-style4">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
			<span class="auto-style4">
			&quot;Expression&quot; is a required string expression containing substrings 
			and delimiters.</span></li>
			<li>
			<p style="text-indent: -.25in; margin-left: .25in">
			<span style="font-style: normal; font-variant: normal; font-weight: normal; " class="auto-style4">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
			<span class="auto-style4">
			&quot;Delimiter&quot; is an optional string identifying the delimiter 
			character. By default, a space character (&quot; &quot;) is considered to be 
			the delimiter.</span></li>
			<li>
			<p style="text-indent: -.25in; margin-left: .25in">
			<span style="font-style: normal; font-variant: normal; font-weight: normal; " class="auto-style4">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
			<span class="auto-style4">
			&quot;Count&quot; is an optional number of substrings to return. The default 
			is -1, which indicates all substrings are to be returned.</span></li>
			<li>
			<p style="text-indent: -.25in; margin-left: .25in">
			<span style="font-style: normal; font-variant: normal; font-weight: normal; " class="auto-style4">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
			<span class="auto-style4">
			&quot;Compare&quot; is an optional numeric value signifying how the comparison 
			should take place for evaluating substrings. A 0 indicates binary 
			comparison; a 1 (the default) signifies textual comparison.</span></li>
		</ul>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<font color="#008000"><span class="auto-style1">' this code explains splitting the 
		string into 4 'parts' (by \ ) and join them back with / as in 
		&quot;C:/MyData/Week4/MySheet4.xls&quot;</span></font><font color="#800000"><br class="auto-style1">
		<span class="auto-style1">parts = <b>Split</b>(&quot;C:\MyData\Week4\MySheet4.xls&quot;, &quot;\&quot;)<br>
&nbsp; <b>For</b> i = 0 To UBound(parts) <br>
		</span>
		</font><span class="auto-style1"><font color="#008000">&nbsp;&nbsp;&nbsp; 'MsgBox parts(i) </font>
		<font color="#800000"><br>
&nbsp; <b>Next</b> i<br>
		Debug.Print <b>Join</b>(parts, &quot;/&quot;)</font></span></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" align="right">
		<br class="auto-style4">
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		<span class="auto-style4">Return To Top</span></a></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span class="auto-style1"><span class="auto-style8"><br>
		<br>
		Example 5.1 using <b>For Each...Next</b> loop to format the used range 
		in column B in dollar symbol and specific decimals format in #,##0.000<br>
		</span>
		</span><span style="color: #800000" class="auto-style4">Dim finalrow As Long, 
		i As Long, cel As Range</span></p>
		<p class="auto-style14">
		finalrow = Cells(65536, 
		1).End(xlUp).Row</p>
		<p class="auto-style14">
		i = 1</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp; <b>For Each</b> cel 
		In Range(&quot;A2:A&quot; &amp; finalrow).SpecialCells(xlCellTypeVisible)</font></span></p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; i = i + 1</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; Cells(i, 
		1).NumberFormat = &quot;$#,##0.000&quot;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp; <b>Next</b></font></span></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<font color="#800000"><span class="auto-style4">MsgBox i &amp; 
		&quot;cells formatted&quot;</span><br>
		&nbsp;</font></p>
		<table border="0" width="31%" cellspacing="0" cellpadding="0" id="table11">
			<tr>
				<td>
				<img border="0" src="Images/for_next_Ex5.1.gif" width="221" height="121"></td>
			</tr>
		</table>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color:#CC3300"><br>
		&nbsp;</span></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<br>
&nbsp;</p>
		<p class="auto-style16">
		Example 5.2 &nbsp;The first <b>For Each&#8230;Next</b> 
		loops through the sheets, and colors all formula cells to Red font. The 
		nested For Each&#8230;Next loop then run through all the cells in a range, and 
		convert anything that has the font type like &#8220;Cour*&#8221; to &#8220;Arial&#8221; font 
		type.</p>
		<p class="auto-style14">
		Dim sht As Worksheet, c As 
		Range</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color: #800000"><font size="2" class="auto-style8">
		<span class="auto-style15">For Each</span><span class="auto-style1"> sht In 
		Sheets</span></font></span></p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; On Error 
		Resume Next</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; 
		sht.Cells.SpecialCells(xlFormulas).Font.ColorIndex = 3</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		<b>For Each</b> c In [A1:A100]</font></span></p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		If c.Font.Name Like &quot;Cour*&quot; Then</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		c.Font.Name = &quot;Arial&quot;</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		End If</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;<b>Next</b> 
		c<br>
		<b>Next</b> sht</font></span></p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p class="auto-style16">
		Example 5.3 <b>For Each...Next</b> loop. 
		This simple procedure deletes all the other sheets except for two sheets 
		named &#8220;pivot&#8221; and &#8220;maindata&#8221; in the active workbook.</p>
		<p class="auto-style14">
		Dim ws As Worksheet</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; 
		Application.ScreenUpdating = False</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; 
		Application.DisplayAlerts = False</p>
		<p class="auto-style14">
		On Error GoTo Exits:</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color: #800000"><font size="2" class="auto-style8">
		<span class="auto-style15">For Each</span><span class="auto-style1"> ws In 
		Worksheets</span></font></span></p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; If 
		ws.Name &lt;&gt; &quot;pivot&quot; And ws.Name &lt;&gt; &quot;maindata&quot; Then ws.Delete</p>
		<p class="auto-style17">
		Next</p>
		<p class="auto-style14">
		Exits:</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; 
		Application.ScreenUpdating = True</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; 
		Application.DisplayAlerts = True</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<br class="auto-style1">
		<span class="auto-style1">Example 5.4 <b>For Each...Next</b> loop. This code checks through all 
		the sheets in the active workbook that are not the sheet name &#8220;main&#8221;, 
		and then copy range(&#8220;A2:D8&#8221;) from all the sheets to sheet &#8220;main&#8221; at cell 
		B2. </span></p>
		<p class="auto-style14">
		Dim osh As Worksheet</p>
		<p class="auto-style14">
		Set osh = Sheets(&quot;main&quot;)</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color: #800000"><font size="2" class="auto-style8">
		<span class="auto-style15">For Each</span><span class="auto-style1"> sh In 
		Worksheets</span></font></span></p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; If 
		sh.Name &lt;&gt; &quot;main&quot; Then</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		sh.Range(&quot;A2:D8&quot;).Copy</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		osh.Cells(Rows.Count, 1).End(xlUp).Offset(1, 1).Select</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		ActiveSheet.Paste link:=False</p>
		<p class="auto-style14">
		&nbsp;&nbsp;&nbsp; End If</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color: #800000"><font size="2" class="auto-style8">
		<span class="auto-style15">Next</span><span class="auto-style1"> sh</span></font></span></p>
		<span style="color: #800000" class="auto-style4">
		<br>
		</span><span class="auto-style4">Sometimes ago 
		I did a procedure relating to my work, extending a little from the above 
		example 5.4. This procedure copies all the sheets from path 
		&#8220;C:\william91128\myVendors\&#8221; (you would change the path to suit) to the 
		active workbook where you would place the code, and continue to copy all 
		data except for headers, sheet by sheet, and append to the active sheet 
		&#8220;main&#8221;. The formula in main sheet calculates with new data appended. You 
		can <span style="color: #0000FF">
		<a href="http://www.110mb.com/404.php">DOWNLOAD</a></span> the zip file 
		here.</span></font><p class="auto-style4" style="line-height: 12.0pt">
	  &nbsp;</p>
		
		<p style='margin-left:6.5in' align="right">		
		<font size="2" class="auto-style4"><a name="do_loop"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p>

		<p style="line-height: 12.0pt">
		<span class="auto-style4"><br>
		</span><span class="auto-style1">
		<font class="auto-style19"><strong>Using Do...Loop Statements</strong></font><font size="2" class="auto-style8"><br>
		<br>
		</font></span><span class="auto-style4">You 
		can use <b>Do...Loop</b> statements to run a block of
		<span style="color: windowtext; text-decoration: none">statements</span> 
		an indefinite number of times. The statements are repeated either while 
		a con</span><font face=""><span class="auto-style4">dition is <b>True</b> or until a condition becomes <b>True</b>. </span></p>
		</font>

		</font>
		<p style="line-height: 12.0pt" class="auto-style4">
		The code below will read in the entire 
		boot.ini file. But there is no condition in that Do Loop, and so the 
		code will keep trying to read in lines from the file, until VB throws up 
		runtime error 62 : Input past end of file. Using a Do Until... Loop with 
		function EOF() will resolve this problem.</p>
		<p style="line-height: 12.0pt">
		<font color="#800000" size="2" class="auto-style4">Dim textLine As String<br>
		Open &quot;c:\boot.ini&quot; For Input As #1<br>
		<b>Do</b><br>
		&nbsp;&nbsp; Line Input #1, textLine<br>
		&nbsp;&nbsp; Debug.Print textLine<br>
		<b>Loop</b><br>
		Close #1</font><font face="Verdana" size="2"><br class="auto-style8">
		<span class="auto-style8">&nbsp;</span></font></p>
		<p style="line-height: 12.0pt">
		<font color="#800000" size="2" class="auto-style4">Dim textLine As String<br>
		Open &quot;c:\autoexec.bat&quot; For Input As #1<br>
		<b>Do Until</b> EOF(1)<br>
		&nbsp;&nbsp; Line Input #1, textLine<br>
		&nbsp;&nbsp; Debug.Print textLine<br>
		<b>Loop</b><br>
		Close #1</font></p>
		<p style="line-height: 12.0pt" align="right">
		<font size="2" class="auto-style4"><a name="do_loop_while"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p>
		<p style="line-height: 12.0pt" align="left">
		<span class="auto-style20">Repeating Statements While a 
		Condition is True</span><span style="font-size: 10.0pt; font-family: Arial"><br>
		</span><span class="auto-style4"><br>There are two 
		ways to use the <b>While</b>
		<span style="color: black; text-decoration: none">keyword</span> to 
		check a condition in a <b>Do...Loop</b> statement. You can check the 
		condition before you enter the loop, or you can check it after the loop 
		has run at least once.<br>
		<br>
		In the following </span>
		<span style="font-family:Arial" class="auto-style8"> <code style="font-family: Courier New">
		<span class="auto-style1">ChkFirstWhile</span></code></span><span class="auto-style4"> procedure, 
		you check the condition before you enter the loop. If
		</span><span style="font-family:Arial">
		<code style="font-family: Courier New"><span class="auto-style4">
		myNum</span></code></span><span style="font-size:10.0pt;font-family:Arial"><span class="auto-style4"> is set to 9 instead of 20, the statements inside the 
		loop will never run. In the </span></span>
		<span style="font-family:Arial"> <code style="font-family: Courier New">
		<span class="auto-style4">ChkLastWhile</span></code></span><span style="font-size:10.0pt;font-family:Arial"><span class="auto-style4"> procedure, 
		the statements inside the loop run only once before the condition 
		becomes <b>False</b></span>.</span></p>

		<p class="auto-style21">
		<font size="2" class="auto-style8">
		Sub ChkFirstWhile()<br>
&nbsp;&nbsp;&nbsp; counter = 0<br>
&nbsp;&nbsp;&nbsp; myNum = 20<br>
&nbsp;&nbsp;&nbsp; <b>Do While</b> myNum &gt; 10<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myNum = myNum - 1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; counter = counter + 1<br>
&nbsp;&nbsp;&nbsp; <b>Loop</b><br>
&nbsp;&nbsp;&nbsp; MsgBox &quot;The loop made &quot; &amp; counter &amp; &quot; repetitions.&quot;<br>
		End Sub</font></p>
		<span style="font-family: Courier New; color: #800000">
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		</span><font size="2" class="auto-style8">
		<code style="color: #800000">
		<span style="color: #800000; ">
		<span style="font-family: Courier New; color: #800000">
		<br class="auto-style1">
		</span></span></code>
		<span style="font-family: Courier New; color: #800000">
		<code style="color: #800000">
		<span style="color: #800000; " class="auto-style1">
&nbsp;</span></code></span></font><span style="font-family: Courier New; color: #800000"></p>
		</span>
		<p class="auto-style22">
		<code style="color:#800000" class="auto-style1">Sub 
		ChkLastWhile()</code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<span style="color: #800000">
		<code style="color:#800000" class="auto-style1">
		<span class="auto-style8">&nbsp;&nbsp;&nbsp; 
		count</span></code><code class="auto-style1"><span class="auto-style8">er 
		= 0</span></code></span></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1">
		<span style="color: #800000" class="auto-style8">
		&nbsp;&nbsp;&nbsp; myNum = 9</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1"><span style="color: #800000">
		<font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; 
		<b>Do</b></font></span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1">
		<span style="color: #800000" class="auto-style8">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myNum = myNum 
		- 1</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1">
		<span style="color: #800000" class="auto-style8">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; counter = 
		counter + 1</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1"><span style="color: #800000">
		<font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; 
		<b>Loop While</b> myNum &gt; 10</font></span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1">
		<span style="color: #800000" class="auto-style8">
		&nbsp;&nbsp;&nbsp; MsgBox &quot;The loop made &quot; &amp; counter &amp; &quot; 
		repetitions.&quot;</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code class="auto-style1">
		<span style="color: #800000" class="auto-style8">
		End Sub</span></code></p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<font color="#008000"><span class="auto-style4">' This simple code replaces 
		all characters of &quot; with blank and print them out line by line.</span></font><br class="auto-style4">
		<font size="2" class="auto-style8">
		<span style="color: #800000; " class="auto-style1">
		Dim dText As String, TextLine As String<br>
		Open &quot;D:\CheeYoong\biblecode.txt&quot; For Input As #1</span></font></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<font size="2" class="auto-style8">
		<span style="color: #800000; " class="auto-style1">&nbsp;&nbsp; 
		<b>Do While</b> Not EOF(1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Line Input #1, TextLine<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TextLine = Replace(TextLine, Chr$(34), &quot;&quot;)&nbsp;
		</span><font color="#008000"><span class="auto-style1">' Chr$(34) 
		is character &quot;</span></font><span style="color: #800000; "><br class="auto-style1">
		</span><span style="color: #800000; " class="auto-style1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dText = dText &amp; TextLine &amp; vbCrLf<br>
&nbsp;&nbsp; <b>Loop</b><br>
		</span><font color="#008000"><span class="auto-style1">
		'debug.print dText</span></font><span style="color: #800000; "><br class="auto-style1">
		</span><span style="color: #800000; " class="auto-style1">TextBox1.Text = dText</span></font></p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" align="right">
		<font face="Arial" size="2"><a name="do_until_loop">
		<span class="auto-style1"><span class="auto-style8"></span></span></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		<span class="auto-style1"><span class="auto-style8">Return To T</span></span>op</a></font></p>
		<p><b><span class="auto-style23">Repeating Statements Until a Condition Becomes True</span><span style="font-family:
Arial"><br>
		</span></b><span style="font-size:10.0pt;font-family:Arial"><br>
		</span><span class="auto-style4">There are 
		two ways to use the <b>Until</b> keyword to check a condition in a <b>
		Do...Loop</b> statement. You can check the condition before you enter 
		the loop (as shown in the 
		</span><span style="font-family:Arial"> <code style="font-family: Courier New">
		<span class="auto-style4">ChkFirstUntil</span></code></span><span style="font-size:10.0pt;font-family:Arial"><span class="auto-style4"> procedure), 
		or you can check it after the loop has run at least once (as shown in 
		the 
		</span>
		</span><span style="font-family:Arial"> <code style="font-family: Courier New">
		<span class="auto-style4">ChkLastUntil</span></code></span><span style="font-size:10.0pt;font-family:Arial"><span class="auto-style4"> procedure). 
		Looping continues while the condition remains <b>False</b></span></span><span style="font-family:Arial" class="auto-style8">.</span><span class="auto-style4"><br>
		<br>
		</span><code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style1">
		<font size="2" class="auto-style8">
		Sub ChkFirstUntil()<br>
		&nbsp;&nbsp;&nbsp; counter = 0<br>
		&nbsp;&nbsp;&nbsp; myNum = 20<br>
		&nbsp;&nbsp;&nbsp; <b>Do Until</b> myNum = 10<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myNum = myNum - 1<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter = counter + 1<br>
		&nbsp;&nbsp;&nbsp; <b>Loop</b><br>
		&nbsp;&nbsp;&nbsp; MsgBox &quot;The loop made &quot; &amp; counter &amp; &quot; repetitions.&quot;<br>
		End Sub</font></span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">Sub ChkLastUntil()</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp; 
		counter = 0</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp; 
		myNum = 1</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style1">
		<font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; 
		<b>Do</b></font></span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		myNum = myNum + 1</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		counter = counter + 1</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style1">
		<font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; 
		<b>Loop Until</b> myNum = 10</font></span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">&nbsp;&nbsp;&nbsp; 
		MsgBox &quot;The loop made &quot; &amp; counter &amp; &quot; repetitions.&quot;</span></code></p>
		<p style="font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="font-family: Courier New; color: #993300">
		<span style="color: #800000" class="auto-style4">End Sub</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" align="right" class="auto-style4">		
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></p>
		<p><span class="auto-style20">Exiting a Do...Loop Statement from Inside the Loop</span><span style="font-size:10.0pt;font-family:Arial"><br>
		<br></span><span class="auto-style4">You can exit a <b>Do...Loop</b> using the <b>Exit Do</b> statement. For 
		example, to exit an endless loop, use the <b>Exit Do</b> statement in 
		the <b>True</b> statement block of either an <b>If...Then...Else</b> 
		statement or a <b>Select Case</b> statement. If the condition is <b>
		False</b>, the loop will run as usual.</span></p>
		<p><span class="auto-style4">In the following 
		example, </span><span style="font-family:Arial" class="auto-style8"> <code style="font-family: Courier New">
		<span class="auto-style1">myNum</span></code></span><span class="auto-style4"> is assigned a value 
		that creates an endless loop. The <b>If...Then...Else</b> statement 
		checks for this condition, and then exits, preventing endless looping.</span></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">Sub ExitExample()</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp; counter = 
		0</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp; myNum = 9</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; <b>Do 
		Until</b> myNum = 10</font></span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		myNum = myNum - 1</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		counter = counter + 1</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		If myNum &lt; 10 Then Exit Do</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000"><font size="2" class="auto-style8">&nbsp;&nbsp;&nbsp; <b>Loop</b></font></span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">&nbsp;&nbsp;&nbsp; MsgBox 
		&quot;The loop made &quot; &amp; counter &amp; &quot; repetitions.&quot;</span></code></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style8">
		<code style="color: #993300" class="auto-style1">
		<span style="color: #800000">End Sub</span></code></p>
		<p style="margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt" class="auto-style4">
		&nbsp;</p>
		<p><span class="auto-style8">
		<font color="#800000"><br class="auto-style1">
		</font></span>

<font face="">
		<span class="auto-style4">
		Example 6.1 This <b>Do While&#8230;Loop</b> executes the code as long as there 
		is something in the column to the left of the active cell E2. Even 
		though there is already a cell in E6 in the column that is not empty, 
		the Average formula runs through and overwrites its content.<br>
		</span></font><font color="#800000" size="2" class="auto-style8">
		<span class="auto-style15">Do While</span><span class="auto-style1"><font face="">
		Not 
		IsEmpty(ActiveCell.Offset(0, -1))<br>
		&nbsp;&nbsp; ActiveCell.FormulaR1C1 = &quot;=IF(RC[-3]&lt;500,&quot;&quot;don't 
		stock&quot;&quot;,AVERAGE(RC[-2]:RC[-1]))&quot;<br>
		&nbsp;&nbsp; ActiveCell.Offset(1, 0).Select<br>
		<b>Loop</b></font></span></font></p>
		<table border="0" width="59%" cellspacing="0" cellpadding="0" id="table12">
			<tr>
				<td>
				<table border="0" cellspacing="0" cellpadding="0" width="437" height="181">
					<tr>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_1.gif" height="60" width="219"></td>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_2.gif" height="60" width="218"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_3.gif" height="61" width="219"></td>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_4.gif" height="61" width="218"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_5.gif" height="60" width="219"></td>
						<td>
						<img border="0" src="Images/do_while_Ex6.1_6.gif" height="60" width="218"></td>
					</tr>
				</table>
				<p>&nbsp;</td>
			</tr>
		</table>

</font>

<font face="">
		<font face="Arial">
		<p><br>
		</font>

<font face="">
		<span class="auto-style1"><font size="2" class="auto-style8">Example 6.2 <b>Do 
		While&#8230;Loop</b>. This macro is the same as when you try use Excel to 
		import all the text files from a specified location, in the format that 
		you desired, except here that I demonstrate to you that you can include 
		it in a Do While&#8230;Loop. Change the directory to whatever is necessary.</font></span></font></font><span style="color: maroon"><br class="auto-style4">
		</span>

<font face="">
		<font size="2" class="auto-style8">
		<span style="color: maroon" class="auto-style1">Dim FileName As 
		String<br>
		FileName = Dir(&quot;C:\Documents and Settings\ptan91128\SapWorkDir\*.txt&quot;)<br>
		<b>Do While</b> FileName &lt;&gt; &quot;&quot;<br>
		&nbsp; &nbsp;Workbooks.OpenText _<br>
		&nbsp;&nbsp;&nbsp;FileName:=FileName, _<br>
		&nbsp;&nbsp;&nbsp;Origin:=xlMSDOS, _<br>
		&nbsp;&nbsp;&nbsp;StartRow:=1, _<br>
		&nbsp;&nbsp;&nbsp;DataType:=xlDelimited, _<br>
		&nbsp;&nbsp;&nbsp;TextQualifier:=xlDoubleQuote, _<br>
		&nbsp;&nbsp;&nbsp;ConsecutiveDelimiter:=True, _<br>
		&nbsp;&nbsp;&nbsp;Tab:=True, _<br>
		&nbsp;&nbsp;&nbsp;Semicolon:=False, _<br>
		&nbsp;&nbsp;&nbsp;Comma:=False, _<br>
		&nbsp;&nbsp;&nbsp;Space:=True, _<br>
		&nbsp;&nbsp;&nbsp;Other:=False, _<br>
		&nbsp;&nbsp;&nbsp;FieldInfo:=Array(Array(1, 1)), _<br>
		&nbsp;&nbsp;&nbsp;TrailingMinusNumbers:=True<br>
		&nbsp;&nbsp; FileName = Dir<br>
		<b>Loop</b></span></font></p>
		<p align="right" class="auto-style4">		
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></p>
		<p><span style="color: maroon"><br class="auto-style4">
		</span><font face="">
		<span class="auto-style4">Example 7.1 <b>Do 
		Until&#8230;Loop</b> structure is just the opposite of Do While&#8230;Loop. Do&#8230;Until 
		Loop runs through the statements 
		for as long as a condition is <b>False</b>, stops when the condition 
		becomes <b>True</b>. The example below searched down the column you had 
		selected for the person name called &#8220;Abramovich&#8221; until it reaches a 
		blank cell. During the search, if the match is found, it will exit the 
		loop prematurely with <b>Exit Do</b> statement. The counter increases by 
		1 every time through the loop, and the condition following Do Until is 
		always based on a new cell.</span></p>
		<p style="font-size: 10.0pt; font-family: Courier New; margin-left: 0in; margin-right: 0in; margin-top: 0in; margin-bottom: .0001pt">
		<font size="2" class="auto-style8">
		<span style="color: maroon" class="auto-style1">Sub 
		DoUntilLoop()<br>
		Dim selectedCol As Integer, lastCol As Integer, rowCount As Integer, 
		Match As Boolean<br>
		With Range(&quot;A1&quot;)<br>
		lastCol = Range(.Offset(0, 0), .End(xlToRight)).Columns.Count<br>
		End With<br>
		<br>
		selectedCol = InputBox(&quot;select the column number from 1 to &quot; &amp; lastCol &amp; 
		&quot; to search&quot; _<br>
&nbsp;&nbsp; &amp; &quot;for Roman Abramovich&quot;)<br>
		rowCount = 1<br>
		Match = False<br>
		With Range(&quot;A1&quot;).Offset(0, selectedCol - 1)<br>
		</span></font>
		<span style="font-family: Arial; color: #339966; " class="auto-style4">
		' loops until a blank cell is reached.</span><span style="color: maroon" class="auto-style1"><br class="auto-style8">
		</span>
		<span style="font-family: Arial; color: #339966; " class="auto-style4">
		' If Abramovich is not found in your selected column, 
		this loop will never execute</span><span style="color: maroon" class="auto-style1"><span class="auto-style8"><br>
		</span>
		<b><span class="auto-style8">Do Until</span></b><span class="auto-style8"> .Offset(rowCount, 0) = vbNullString<br>
&nbsp;&nbsp; If .Offset(rowCount, 0) Like &quot;*Abramovich&quot; Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Match = True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox ActiveCell.Value &amp; vbCrLf &amp; 
		ActiveCell.Offset(, 1).Value &amp; vbCrLf _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp; ActiveCell.Offset(, 2), 
		vbInformation, &quot;Information found&quot;<br>
		</span>
		</span>
		<span style="font-family: Arial; color: #339966; " class="auto-style4">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		' exit loop prematurely as soon as match is found</span><font size="2" class="auto-style8"><span style="color: maroon"><br class="auto-style1">
		</span>
		<span style="color: maroon" class="auto-style1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Do<br>
&nbsp;&nbsp; Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rowCount = rowCount + 1&nbsp; </span>
		</font>
		<span style="font-family: Arial; color: #339966; " class="auto-style4">
		' without counter =1, it will be an indefinite loop</span><span style="color: maroon"><span class="auto-style8"><br class="auto-style1">
		</span></span>
		<span style="color: maroon" class="auto-style1">
		<span class="auto-style8">&nbsp;&nbsp; End If<br>
		<b>Loop</b><br>
		End With<br>
&nbsp;&nbsp; If Match = False Then<br>
&nbsp;&nbsp;&nbsp; MsgBox &quot;no match was found&quot;<br>
&nbsp;&nbsp; End If<br>
		End Sub</span></span><font size="2"><span style="font-family: Courier New; color: maroon"><br>
		<br>
		<img border="0" src="Images/do_until_loop_Ex7.1.gif" width="534" height="160"><br>
		<br>
		</span>
		</font>
		<img border="0" src="Images/do_until_loop_abramovich.gif" width="344" height="196"></p>
		<p align="right">		
		<font face="Arial" size="2">
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p>
		<p><span style="font-size:10.0pt;font-family:Arial"><br>
		</span>
		</font></font><span class="auto-style4">Example 8.1<b> Do&#8230;Loop While</b> loop that uses a password checker that 
		prevent unauthorized persons from running your procedure without 
		providing the correct password in the Workbook_Open module. Of course, 
		you would first want to lock your project procedure with a password to 
		prevent someone from seeing the password &#8220;dobeman&#8221;.<br>
		</span>

<font face="">
		<span style="color:maroon" class="auto-style1">
		<font size="2" class="auto-style8">Private Sub Workbook_Open()<br>
		Dim pwd As String<br>
		<b>Do</b><br>
		&nbsp;&nbsp;&nbsp; pwd = InputBox(&quot;enter password to open this 
		workbook:&quot;, &quot;password in characters&quot;)<br>
		&nbsp;&nbsp;&nbsp; If pwd = vbNullString Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox &quot;you had not entered 
		your password&quot;<br>
		&nbsp;&nbsp;&nbsp; End If<br>
		<b>Loop While</b> pwd &lt;&gt; &quot;dobeman&quot;</font></span><span style="color:maroon" class="auto-style4"><br>
		</span>
		<span style="color: #339966; " class="auto-style4">&nbsp;&nbsp;
		</span><font face="arial">
		<span style="font-family: Arial; color: #339966; font-size: 10.0pt">
		<span style="color: #339966" class="auto-style4">' 
		Call yourMacro</span></span></font><span style="color: maroon" class="auto-style4"><br>
		End Sub<br>
		</span><span style="font-size: 10.0pt; font-family: Courier New; color: maroon"><br>
		<img border="0" src="Images/do_loopwhile_Ex8.1.gif" width="224" height="116"></span></p>
		<p>&nbsp;</p>
		<p><span class="auto-style4">Example 8.2 a simple
		<b>Do&#8230;Loop While</b> that finds all cells in a dynamic range on Sheet1 
		that contain the value &#8220;#N/A&#8221; and changes it to &#8220;NA&#8221;<br>
		</span>
		<span style="color: maroon" class="auto-style4">
		Dim myRange As Range, c As Range, iAddress<br>
		On Error Resume Next<br>
		With Worksheets(&quot;Sheet1&quot;).Range(&quot;myRange&quot;)<br>
		&nbsp;&nbsp;&nbsp; Set c = .Find(&quot;#N/A&quot;, LookIn:=xlValues)<br>
		&nbsp;&nbsp;&nbsp; If Not c Is Nothing Then<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iAddress = c.Address<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Do</b><br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		c.Value = &quot;NA&quot;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set c 
		= .FindNext(c)<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b>Loop While</b> Not c Is 
		Nothing And c.Address &lt;&gt; iAddress<br>
		&nbsp;&nbsp;&nbsp; End If<br>
		End With</span></p>
		<p align="right" class="auto-style4">		
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></p>
		<p><span class="auto-style4">Example 9.1 This <b>
		Do&#8230;Loop Until</b> decision loop runs as long as there is something in 
		the column to the left of the active cell, and it does not calculate an 
		average if there is already some cells down in the column that are not 
		empty.</span></font><span style="color:maroon" class="auto-style4"><br>
		<b>Do</b><br>
		</span>

<font face="">
		<span style="color:maroon" class="auto-style4">&nbsp;&nbsp;If IsEmpty(ActiveCell) Then<br>
		&nbsp;&nbsp; &nbsp;&nbsp;ActiveCell.FormulaR1C1 = &quot;=IF(RC[-3]&lt;500,&quot;&quot;don't 
		stock&quot;&quot;,AVERAGE(RC[-2]:RC[-1]))&quot;<br>
		&nbsp;&nbsp;End If<br>
		&nbsp; ActiveCell.Offset(1, 0).Select<br>
		<b>Loop Until</b> IsEmpty(ActiveCell.Offset(0, -1))</span><span style="font-size: 10.0pt; font-family: Courier New; color: maroon"><br>
&nbsp;</span></p>
		<table border="0" width="70%" cellspacing="0" cellpadding="0" id="table13">
			<tr>
				<td>
				<table border="0" cellspacing="0" cellpadding="0" width="516" height="183">
					<tr>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_1.gif" height="61" width="258"></td>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_2.gif" height="61" width="258"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_3.gif" height="61" width="258"></td>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_4.gif" height="61" width="258"></td>
					</tr>
					<tr>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_5.gif" height="61" width="258"></td>
						<td>
						<img border="0" src="Images/do_loopuntil_Ex9.1_6.gif" height="61" width="258"></td>
					</tr>
				</table>
				<p>&nbsp;</td>
			</tr>
		</table>
		<p>&nbsp;</p>
		</font></font>
		<p><font face="">
		<span class="auto-style4">Example </span></font>
		<font size="2" class="auto-style4">10.1&nbsp; A <b>While...Wend</b> statement 
		behaves like the <b>Do While...Loop</b> statement. <br>
		The following <b>While...Wend</b> counts from 1 to 100</font></p>
		<p class="auto-style4"><font color="#800000">Dim number As 
		Integer </font></p>
		<p><font size="2" color="#800000" class="auto-style4">number = 1 <br>
		While number &lt; 100 <br>
&nbsp;&nbsp; number = number + 1 <br>
		Wend</font></p>
		<font face="">
		
		<p style='margin-left:6.5in' align="right">		
		<font size="2" class="auto-style4"><a name="While...Wend"></a>
		<a href="#TOP" style="color: blue; text-decoration: underline; text-underline: single">
		Return To Top</a></font></p></td>
</tr>

<font face="">

<tr>


<td valign="top" style="width: 9%">

    </td>
  </tr>
</tbody></table>


<table border="0" width="99%" id="table5">
<tr>
<td align="center">
<font size="2">

<font face="Courier New">	

 <a href="http://s05.flagcounter.com/more/RvMZ"><img src="http://s05.flagcounter.com/count/RvMZ/bg=FFFFFF/txt=000000/border=CCCCCC/columns=4/maxflags=48/viewers=0/labels=1/" alt="free counters" border="0"></a>	<br><br>


</font></font><span class="auto-style4">This site was created in Feb.2007<br>by 
William Tan</span></td>
</tr>
</table>

</body>
</html>